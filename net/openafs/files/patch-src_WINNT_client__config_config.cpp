--- src/WINNT/client_config/config.cpp.orig	2021-01-14 21:08:41 UTC
+++ src/WINNT/client_config/config.cpp
@@ -217,134 +217,6 @@ BOOL Config_SetCellName (LPCTSTR pszName, ULONG *pStat
    return TRUE;
 }
 
-#if 0
-/* 	These two functions are not needed as of the 1.2.2a updates.
-	The old implementation used to 'bind' afslogon.dll to the credentials manager
-	when the Integrated Logon was selected.
-
-	With version 1.2.2a afslogon.dll is always 'bound' to the credentials manager; therefore,
-	the binding operation is done during installation.  Note: the Integrated Logon is
-	selected by an entry in the registry (LogonOptions).
-*/
-void Config_GetAuthentFlag (BOOL *pfFlag)
-{
-   *pfFlag = FALSE;
-
-   HKEY hk;
-   if (RegOpenKeyEx (HKEY_LOCAL_MACHINE, TEXT("System\\CurrentControlSet\\Control\\NetworkProvider\\Order"), 0, KEY_QUERY_VALUE, &hk) == ERROR_SUCCESS)
-      {
-      if (g.fIsWinNT)
-         {
-         TCHAR szProviders[ MAX_PATH ] = TEXT("");
-         DWORD dwSize = sizeof(szProviders);
-
-         if (RegQueryValueEx (hk, TEXT("ProviderOrder"), NULL, NULL, (PBYTE)szProviders, &dwSize) == ERROR_SUCCESS)
-            {
-            for (LPTSTR pch = szProviders; *pch; )
-               {
-               if (!lstrncmpi (pch, TEXT("TransarcAFSDaemon"), lstrlen(TEXT("TransarcAFSDaemon"))))
-                  *pfFlag = TRUE;
-
-               for ( ; *pch && (*pch != TEXT(',')); ++pch)
-                  ;
-               for ( ; *pch == TEXT(','); ++pch)
-                  ;
-               }
-            }
-
-         RegCloseKey (hk);
-         }
-      else // (!g.fIsWinNT)
-         {
-         TCHAR szLHS[ MAX_PATH ] = TEXT("");
-         DWORD dwSize = sizeof(szLHS);
-
-         if (RegQueryValueEx (hk, TEXT("TransarcAFSDaemon"), NULL, NULL, (PBYTE)szLHS, &dwSize) == ERROR_SUCCESS)
-            *pfFlag = TRUE;
-         }
-      }
-}
-
-
-BOOL Config_SetAuthentFlag (BOOL fFlag, ULONG *pStatus)
-{
-   ULONG status = 0;
-   BOOL rc = FALSE;
-
-   HKEY hk;
-   DWORD dwDisp;
-   if ((status = RegCreateKeyEx (HKEY_LOCAL_MACHINE, TEXT("System\\CurrentControlSet\\Control\\NetworkProvider\\Order"), 0, TEXT("container"), 0, KEY_QUERY_VALUE | KEY_SET_VALUE, NULL, &hk, &dwDisp)) == ERROR_SUCCESS)
-      {
-      if (g.fIsWinNT)
-         {
-         TCHAR szOldProviders[ MAX_PATH ] = TEXT("");
-         TCHAR szNewProviders[ MAX_PATH ] = TEXT("");
-         DWORD dwSize = sizeof(szOldProviders);
-         RegQueryValueEx (hk, TEXT("ProviderOrder"), NULL, NULL, (PBYTE)szOldProviders, &dwSize);
-
-         for (LPTSTR pch = szOldProviders; *pch; )
-            {
-            BOOL fCopy = TRUE;
-            if (!lstrncmpi (pch, TEXT("TransarcAFSDaemon"), lstrlen(TEXT("TransarcAFSDaemon"))))
-               {
-               fCopy = fFlag;
-               fFlag = FALSE;
-               }
-
-            if (fCopy)
-               {
-               LPTSTR pchOut = &szNewProviders[ lstrlen(szNewProviders) ];
-               if (szNewProviders[0])
-                  *pchOut++ = TEXT(',');
-               for ( ; *pch && (*pch != TEXT(',')); )
-                  *pchOut++ = *pch++;
-               *pchOut = TEXT('\0');
-               }
-
-            for ( ; *pch && (*pch != TEXT(',')); ++pch)
-               ;
-            for ( ; *pch == TEXT(','); ++pch)
-               ;
-            }
-
-         if (fFlag)
-            {
-            if (szNewProviders[0])
-               lstrcat (szNewProviders, TEXT(","));
-            lstrcat (szNewProviders, TEXT("TransarcAFSDaemon"));
-            }
-
-         if ((status = RegSetValueEx (hk, TEXT("ProviderOrder"), NULL, REG_SZ, (PBYTE)szNewProviders, sizeof(TCHAR)*(1+lstrlen(szNewProviders)))) == ERROR_SUCCESS)
-            rc = TRUE;
-         }
-      else // (!g.fIsWinNT)
-         {
-         TCHAR szLHS[ cchRESOURCE ] = TEXT("TransarcAFSDaemon");
-         TCHAR szRHS[ cchRESOURCE ] = TEXT("");
-
-         if (fFlag)
-            {
-            if ((status = RegSetValueEx (hk, szLHS, NULL, REG_SZ, (PBYTE)szRHS, sizeof(TCHAR)*(lstrlen(szRHS)+1))) == 0)
-               rc = TRUE;
-            }
-         else
-            {
-            RegDeleteValue (hk, szLHS);
-            rc = TRUE;
-            }
-         }
-
-      RegCloseKey (hk);
-      }
-
-   if (pStatus && !rc)
-      *pStatus = status;
-   if (!rc)
-      Message (MB_ICONHAND, GetErrorTitle(), IDS_FAILCONFIG_AUTHENT, TEXT("%ld"), status);
-   return rc;
-}
-#endif
-
 void Config_GetTrayIconFlag (BOOL *pfFlag)
 {
    if (!Config_ReadUserNum (TEXT("ShowTrayIcon"), (DWORD*)pfFlag))
